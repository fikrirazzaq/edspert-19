// Mocks generated by Mockito 5.4.2 from annotations
// in learning/test/unit_tests/profile/get_profile_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:learning/src/data/datasource/remote/auth_remote_datasource.dart'
    as _i2;
import 'package:learning/src/data/datasource/remote/profile_remote_datasource.dart'
    as _i3;
import 'package:learning/src/data/repository/profile_repository_impl.dart'
    as _i4;
import 'package:learning/src/domain/entity/user_response_entity.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAuthRemoteDatasource_0 extends _i1.SmartFake
    implements _i2.AuthRemoteDatasource {
  _FakeAuthRemoteDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProfileRemoteDatasource_1 extends _i1.SmartFake
    implements _i3.ProfileRemoteDatasource {
  _FakeProfileRemoteDatasource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProfileRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileRepositoryImpl extends _i1.Mock
    implements _i4.ProfileRepositoryImpl {
  @override
  _i2.AuthRemoteDatasource get authRemoteDatasource => (super.noSuchMethod(
        Invocation.getter(#authRemoteDatasource),
        returnValue: _FakeAuthRemoteDatasource_0(
          this,
          Invocation.getter(#authRemoteDatasource),
        ),
        returnValueForMissingStub: _FakeAuthRemoteDatasource_0(
          this,
          Invocation.getter(#authRemoteDatasource),
        ),
      ) as _i2.AuthRemoteDatasource);

  @override
  _i3.ProfileRemoteDatasource get profileRemoteDatasource =>
      (super.noSuchMethod(
        Invocation.getter(#profileRemoteDatasource),
        returnValue: _FakeProfileRemoteDatasource_1(
          this,
          Invocation.getter(#profileRemoteDatasource),
        ),
        returnValueForMissingStub: _FakeProfileRemoteDatasource_1(
          this,
          Invocation.getter(#profileRemoteDatasource),
        ),
      ) as _i3.ProfileRemoteDatasource);

  @override
  _i5.Future<_i6.UserDataEntity?> getProfile() => (super.noSuchMethod(
        Invocation.method(
          #getProfile,
          [],
        ),
        returnValue: _i5.Future<_i6.UserDataEntity?>.value(),
        returnValueForMissingStub: _i5.Future<_i6.UserDataEntity?>.value(),
      ) as _i5.Future<_i6.UserDataEntity?>);

  @override
  _i5.Future<bool> updateProfile({
    required String? fullName,
    required String? email,
    required String? schoolName,
    required String? schoolLevel,
    required String? schoolGrade,
    required String? gender,
    String? photoUrl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProfile,
          [],
          {
            #fullName: fullName,
            #email: email,
            #schoolName: schoolName,
            #schoolLevel: schoolLevel,
            #schoolGrade: schoolGrade,
            #gender: gender,
            #photoUrl: photoUrl,
          },
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}
